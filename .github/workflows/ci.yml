name: JavaScript CI
on:
  pull_request:
    branches: [ main, release-candidate/* ]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Install Git
      run: sudo apt-get update && sudo apt-get install git ca-certificates
    - name: Get branch data
      uses: tj-actions/branch-names@v5
      id: branch-name
      with:
        strip_tag_prefix: "v"
    - name: Checkout
      uses: actions/checkout@v2.3.4
      with:
        fetch-depth: 1
        ref: ${{ github.head_ref }}
        token: ${{ secrets.GIT_ACCESS_TOKEN }}
        clean: false
    - name: Fetch Git Origin
      run: git fetch origin
    - name: Use Node.js 16.x
      uses: actions/setup-node@v2
      with:
        node-version: 16.x
        cache: "npm"
    - name: Cache dependencies
      uses: actions/cache@v2
      with:
        path: ~/.npm
        key: npm-${{ hashFiles('package-lock.json') }}
        restore-keys: npm-
    - name: Run Package Tests
      run: |
        npm ci
        npm run lint
  commit:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Install Git
      run: sudo apt-get update && sudo apt-get install git ca-certificates
    - name: Checkout
      uses: actions/checkout@v2.3.4
      with:
        fetch-depth: 0
        ref: ${{ github.head_ref }}
        token: ${{ secrets.GIT_ACCESS_TOKEN }}
        clean: false
    - name: Fetch Git Origin
      run: git fetch origin
    - name: Get Commit Message
      run: echo '::set-output name=subject::$(git log --format=%B -n 1)'
      id: log
  browserstack:
    if: "!startsWith( needs.commit.outputs.subject, 'Bump version to' )"
    runs-on: ubuntu-latest
    needs: [build, commit]
    env:
      GITHUB_COMMIT_MSG: ${{ needs.commit.outputs.subject }}
      CI_ADDRESS: ${{ secrets.CI_ADDRESS }}
      BROWSERSTACK_USERNAME: ${{ secrets.BROWSERSTACK_USERNAME }}
      BROWSERSTACK_ACCESS_KEY: ${{ secrets.BROWSERSTACK_ACCESS_KEY }}
      MULTICRAFT_ADDRESS: ${{ secrets.MULTICRAFT_ADDRESS }}
      MULTICRAFT_USERNAME: ${{ secrets.MULTICRAFT_USERNAME }}
      MULTICRAFT_ACCESS_KEY: ${{ secrets.MULTICRAFT_ACCESS_KEY }}
    steps:
    - name: Install Java 16
      uses: actions/setup-java@v2
      with:
        distribution: "temurin"
        java-version: "16"
    - name: Install Git
      run: sudo apt-get update && sudo apt-get install git ca-certificates
    - name: Checkout
      uses: actions/checkout@v2.3.4
      with:
        fetch-depth: 0
        ref: ${{ github.head_ref }}
        token: ${{ secrets.GIT_ACCESS_TOKEN }}
        clean: false
    - name: Fetch Git Origin
      run: git fetch origin
    - name: Get Short SHA
      uses: benjlevesque/short-sha@v1.2
      id: short-sha
    - name: Use Node.js 16.x
      uses: actions/setup-node@v2
      with:
        node-version: 16.x
        cache: "npm"
    - name: Cache dependencies
      uses: actions/cache@v2
      with:
        path: ~/.npm
        key: npm-${{ hashFiles('package-lock.json') }}
        restore-keys: npm-
    - name: Create Staging Branch
      uses: peterjgrainger/action-create-branch@v2.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        branch: staging/${{ steps.short-sha.outputs.sha }}
      id: branch
    - name: Checkout Staging Branch
      uses: actions/checkout@v2.3.4
      with:
        fetch-depth: 0
        ref: ${{ github.head_ref }}
        token: ${{ secrets.GIT_ACCESS_TOKEN }}
        clean: false
    - name: Switch Code Source to Github
      uses: jacobtomlinson/gha-find-replace@master
      with:
        find: /npm/material-dynmap
        replace: /gh/material-dynmap
        exclude: CHANGELOG.md|.*\.json|.*\.yml|.*\.svg|java/.*|\.git/.*
    - name: Switch Code to Staging Version
      uses: jacobtomlinson/gha-find-replace@master
      with:
        find: "@v?${{ needs.build.outputs.tag }}"
        replace: "@staging/${{ steps.short-sha.outputs.sha }}"
        exclude: CHANGELOG.md|.*\.json|.*\.yml|.*\.svg|java/.*|\.git/.*
    - name: Switch Assets to Staging Version
      uses: jacobtomlinson/gha-find-replace@master
      with:
        find: "\\/v?${{ needs.build.outputs.tag }}"
        replace: "\\/staging/${{ steps.short-sha.outputs.sha }}"
        exclude: CHANGELOG.md|.*\.json|.*\.yml|.*\.svg|java/.*|\.git/.*
    - uses: stefanzweifel/git-auto-commit-action@v4
      with:
        commit_message: Automated grep to staging version
        commit_options: "--no-verify --signoff"
        push_options: "--force"
        branch: staging/${{ steps.short-sha.outputs.sha }}
    - name: BrowserStack Environment Setup
      uses: browserstack/github-actions/setup-env@master
      with:
        username: ${{ secrets.BROWSERSTACK_USERNAME }}
        access-key: ${{ secrets.BROWSERSTACK_ACCESS_KEY }}
    - name: BrowserStack Local Tunnel Setup
      uses: browserstack/github-actions/setup-local@master
      with:
        local-testing: start
        local-identifier: ${{ steps.short-sha.outputs.sha }}
    - name: Run BrowserStack Tests
      run: npm install && npm run selenium
      env:
        GITHUB_SHORT_SHA: ${{ steps.short-sha.outputs.sha }}
    - name: BrowserStack Local Stop
      uses: browserstack/github-actions/setup-local@master
      with:
        local-testing: stop
    # - name: Delete Staging Branch
    #   uses: dawidd6/action-delete-branch@v3
    #   with:
    #     github_token: ${{ secrets.GITHUB_TOKEN }}
    #     branches: staging/${{ steps.short-sha.outputs.sha }}
    #   if: always() && steps.branch.outcome == 'success'
  debug:
    runs-on: ubuntu-latest
    steps:
    - name: Dump GitHub context
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
      run: echo '$GITHUB_CONTEXT'
